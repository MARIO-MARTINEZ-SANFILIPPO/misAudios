Bienvenidos. Hoy vamos a hacer una exploración. No, nos metemos con Arduino y los sensores usando material de la Universidad Tecnológica de Uruguay como base. La idea es, bueno, entender bien que es Arduino, cómo se lleva con los sensores y qué papel jueva hoy en día. Es como una puerta de entrada a la automatización bastante interesante. A ver, arranquemos por el principio. ¿Qué es exactamente Arduino? Porque se habla mucho, pero
es una plataforma de hardware libre, o sea, no es solo la plaquita azul o verde. Es la placa Sí, con su microcontrolador, que suele ser un ADMEL ABR y también un software, un ID pensado para ser fácil de usar.
Exacto. Y lo de hardware libre es clave, eh, significa que los diseños están disponibles. Cualquiera puede, digamos, ver cómo está hecho, modificarlo, incluso fabricarlo. Y el software, bueno, simplifica muchísimo la programación de esos microcontroladores que, la verdad, están por todos lados hoy en día.
Claro,
la gran ventaja es esa, la facilidad del software y del lenguaje, que aunque está basado en C++, lo adaptaron para que la curma de aprendizaje sea bastante rápida, incluso si sabes poco de programación o electrónica.
Bien, entonces tenemos la plataforma y para qué se usa en la práctica. Los materiales dan ideas, mencionan cosas como eh controlar una persiana según la luz que haya, pones un sensor de luz, lo conectas a Arduino y listo. O prender una luz con un teclado.
Sí, esos son ejemplos muy muy didácticos, digamos, pero las aplicaciones reales son enormes. Van de la domótica, la robótica, claro, la educativa también, hasta cosas más complejas como ciudades inteligentes, el internet de las cosas o IoT.
Ajá.
También dispositivos wearables, cosas de salud, educación. A ver, básicamente te permite automatizar casi cualquier cosa, sobre todo si son dispositivos que se conectan a internet. Es super versátil y accesible.
Hablemos un poco de la placa más conocida. vida. Quizás la Arduino 1, ¿qué trae? Viendo el material está el conector USB, que es doble propósito, ¿no? Alimentación y cargar el código.
Sí, fundamental.
Luego están los pines, un montón de agujeritos para conectar cosas. Tienes los de tierra GND, los de alimentación 5 vol y 3.3 V.
Y los de entrada salida, ahí está la clave.
Los analógicos A0 A5 que son para leerse el es que dan un rango de valores, como los de temperatura, por ejemplo,
y los digitales del 0 al 13. Esos son más bien para cosas de encendido o apagado, ¿verdad? Como un botón o prender un LED simple,
tal cual. Y también están los pines PM que tienen como una ondita al lado del número.
Ah, sí. ¿Esos para qué son?
Esos permiten simular una salida analógica. O sea, en vez de solo prender o apagar un LED, puedes controlar qué tan brillante está. Muy útil para motores también. entiendo. Y todo esto, bueno, lo maneja el microcontrolador, el cerebro que decíamos. En el uno suele ser un ATM Mega 328P.
Exacto. Es un chip de 8 bits. Funciona a 5 V, tiene 32 KB de memoria flash para guardar el programa, el sketch como le dicen, y un poquito de ese RAM 2 KB para los datos mientras corre y 1 KB de EEP prom datos que no se borren al apagarlo.
16 MHz de velocidad. Suena a poco si lo compara con una compu.
Sí, pero fíjate que para controlar cosas, leer sensores, mandar señales, es más que suficiente para una cantidad enorme de proyectos. No necesita más. La comunicación con la PC es por el USB de forma serial.
Y para decirle qué hacer a ese chip, usamos el software, el ID de Arduino,
que es gratis y funciona en Windows, Mac, Linux. La estructura de un programa básico parece simple. Hay una parte setup que corre una sola vez al principio. Ajá. Ahí configuras los pines. si son entrada o salida, inicias comunicaciones, lo básico para arrancar.
Y luego está el loop, que es el corazón. Ese cóigo se repite y se repite sin parar. Ahí es donde lees los sensores, tomas decisiones, activas cosas.
Exacto. Y ahí es donde entran de hielo los sensores. Sin ellos, Arduino estaría un poco ciego y sordo, ¿no? Un sensor básicamente mide algo del mundo real, luz, temperatura, presión, lo que sea, y lo convierte en una señal eléctrica que el Ardui no puede entender. Son cruciales.
Claro, son los sentidos de la placa
y hay tipos, pueden ser activos que generan su propia señal o pasivos que necesitan que les des energía para funcionar y la salida que dan también varía, puede ser digital, prendido, apagado, analógica, un voltaje que varía o incluso protocolos más complejos.
El material menciona una variedad increíble. Sensores de temperatura como termistores, de luz como los LDR, esas fotorresistencias que cambian su resistencia según la luz que les llega.
Sí. El LDR es un clásico para empezar,
pero también de proximidad, de fuerza, de contacto, sonido, humedad, hasta químicos para detectar gases. Parece que hay un sensor para casi cualquier cosa que quieras medir
prácticamente. Ahora, elegir el sensor correcto no es solo decir quiero medir temperatura. Hay que mirar sus características, las estáticas, por ejemplo.
Estáticas, ¿como cuáles?
Bueno, el rango de medición, obviamente, pero también la exactitud, qué tan cerca mide del valor real y la precisión que es si repite bien la misma medición una y otra vez.
Ah, la diferencia entre exactitud y precisión, como tirar dardos, ¿no? Exactitud es dar en el centro, precisión es que todos caigan juntitos, aunque sean una esquina.
Esa es la analogía perfecta. Exacto. También está la resolución, el cambio más chiquito que puede detectar y la sensibilidad.
Y me imagino que las características dinámicas también importan. Como qué tan rápido responde.
Fundamental el tiempo de respuesta. No es lo mismo. Me la temperatura de una habitación que cambia de espacio que detectar un objeto que pasa volando. Necesitas un sensor rápido para eso. ¿Entendido? Entonces, para elegir bien, primero definir que quieres medir, luego qué tipo de señal necesitas y después evanuar las opciones. Exactitud, velocidad, costo, ¿qué tan confiable es?
Es todo un proceso de diseño. Sí.
En resumen, entonces, Arduino se ve como una herramienta, la verdad, muy potente, pero a la vez bastante accesible y con Ada con esta diversidad enorme de sensores, te abre un mundo de posibilidades para interactuar con el entorno, para crear, para automatizar. Totalmente. Esa es la magia, creo yo. La combinación de un microcontrolador fácil de programar con sensores que pueden digitalizar el mundo físico. Es la base de muchísimas tecnologías que usamos todos los días, a veces sin darlos cuenta. Y lo interesante es ver como con componentes que son en el fondo relativamente simples se pueden construir sistemas bastante complejos e inteligentes.
Nos deja pensando, ¿no? Más allá de lo típico, ¿qué otras combinaciones de sensores se podrían explorar? Quizá cruzar datos de sensores ambientales con, no sé, patrones de movimiento en una ciudad
o usar sensores biométricos de formas nuevas en instalaciones artísticas.
Exacto. ¿Qué problemas nuevos podríamos atacar o qué experiencias podríamos diseñar si empezamos a mezclar estos sentidos de formas un poco más creativas? Queda la pregunta abierta.
